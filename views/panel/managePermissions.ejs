<div class="container">
    <div class="mt-4">
        <h2>Manage Permissions</h2>
    </div>

    <div class="mt-4">
        <div class="row">
            <div class="col-xs-12">
                <div id="createPermissionMessage" class="mt-3"></div>
            </div>
            
            <!-- Permissions Display Section -->
            <div class="col-xs-12 col-md-6">
                <div class="permissionsDisplay"></div>
            </div>
            
            <!-- Create Permission Section -->
            <div class="col-xs-12 col-md-6">
                <div class="mb-3">
                    <h4>Create Permission</h4>
                    <div class="mb-3">
                        <label for="newPermissionAction" class="form-label">Permission Action</label>
                        <input type="text" class="form-control" id="newPermissionAction" required>
                    </div>
                    <button id="createPermissionButton" class="btn btn-primary">Create Permission</button>
                    
                </div>
            </div>

        </div>
    </div>
</div>

<script signal key="getAllPermissions">
    setTimeout(async _ => {
        try {
            const response = await fetch("/api/authorized/getPermissions", {
                method: "POST",
                headers: {
                    "Content-Type": "application/json",
                    "x-bearer": sessionStorage.getItem("token")
                }
            });

            const result = await response.json();
            console.log("API Response (permissions):", result);

            // Check if the permissionsData exists and is an array
            if (result.permissionsData && Array.isArray(result.permissionsData)) {
                // Build the table
                const tableHTML = `
                    <table class="table table-striped">
                        <thead>
                            <tr class='text-center'>
                                <th scope="col">ID</th>
                                <th scope="col">Action</th>
                                <th scope="col">Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            ${result.permissionsData.map(permission => {
                                return `
                                    <tr>
                                        <td>${permission.id}</td>
                                        <td>${permission.action}</td>
                                        <td class='text-center'>
                                            <button class="btn btn-outline-danger deletePermissionBtn" data-id="${permission.id}">Delete</button>
                                        </td>
                                    </tr>
                                `;
                            }).join('')}
                        </tbody>
                    </table>
                `;

                // Insert the table HTML into the .permissionsDisplay element
                document.querySelector('.permissionsDisplay').innerHTML = tableHTML;

                // Add event listeners to delete buttons
                document.querySelectorAll('.deletePermissionBtn').forEach(button => {
                    button.addEventListener('click', async function() {
                        const permissionId = button.getAttribute('data-id');
                        try {
                            const deleteResponse = await fetch("/api/authorized/deletePermission", {
                                method: "POST",
                                headers: {
                                    "Content-Type": "application/json",
                                    "x-bearer": sessionStorage.getItem("token")
                                },
                                body: JSON.stringify({ id: permissionId })
                            });

                            const deleteResult = await deleteResponse.json();
                            console.log("Delete Response:", deleteResult);

                            const messageDiv = document.getElementById("createPermissionMessage");

                            if (deleteResponse.ok) {
                                showMessage(messageDiv, `Permission with ID ${permissionId} deleted successfully.`, 'success');
                                // Refresh the permissions list
                                window.location.reload();
                            } else {
                                showMessage(messageDiv, deleteResult.message || 'Error deleting permission.', 'danger');
                            }
                        } catch (err) {
                            console.error(err);
                            const messageDiv = document.getElementById("createPermissionMessage");
                            showMessage(messageDiv, 'An error occurred while deleting the permission.', 'danger');
                        }
                    });
                });
            } else {
                document.querySelector('.permissionsDisplay').innerHTML = '<div>No permissions found.</div>';
            }
        } catch (err) {
            console.error(err);
            document.querySelector('.permissionsDisplay').innerHTML = '<div>Error loading permissions.</div>';
        }
    });

    // Function to display messages
    function showMessage(element, message, type) {
        element.innerHTML = `<div class="alert alert-${type}">${message}</div>`;
    }
</script>

<script signal key="createPermissionScript">
    // Handle the Create Permission functionality with JS
    document.getElementById('createPermissionButton').addEventListener('click', async () => {
        const newPermissionAction = document.getElementById("newPermissionAction").value;
        const createMessageDiv = document.getElementById("createPermissionMessage");

        if (!newPermissionAction) {
            showMessage(createMessageDiv, 'Permission Action is required.', 'warning');
            return;
        }

        try {
            const response = await fetch("/api/authorized/createPermission", {
                method: "POST",
                headers: {
                    "Content-Type": "application/json",
                    "x-bearer": sessionStorage.getItem("token")
                },
                body: JSON.stringify({ action: newPermissionAction })
            });

            const result = await response.json();
            console.log("Create Permission Response:", result);

            if (response.ok) {
                showMessage(createMessageDiv, result.message, 'success');
                // Clear the input field
                document.getElementById("newPermissionAction").value = '';
                // Refresh the permissions list
                window.location.reload();
            } else {
                showMessage(createMessageDiv, result.message || 'Error creating permission.', 'danger');
            }
        } catch (err) {
            console.error(err);
            showMessage(createMessageDiv, 'An error occurred while creating the permission.', 'danger');
        }
    });

    // Function to display messages
    function showMessage(element, message, type) {
        element.innerHTML = `<div class="alert alert-${type}">${message}</div>`;
    }
</script>
